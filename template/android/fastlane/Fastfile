default_platform(:android)

def to_b(str)
  str == true || str.to_s.downcase == "true"
end

platform :android do
  before_all do
    ENV['SUPPLY_UPLOAD_MAX_RETRIES']='3'
  end
  lane :upload do |options|
    supply(
    	root_url: "https://androidpublisher.googleapis.com/",
    	package_name: options[:package_name],
    	version_name: options[:version_name],
    	version_code: options[:version_code].to_i,
    	track: "internal",
    	rollout: "1.0",
    	aab: to_b(options[:skip_upload_aab]) ? nil : options[:aab_path],
    	apk: to_b(options[:skip_upload_apk]) ? nil : options[:apk_path],
    	skip_upload_metadata: !to_b(options[:upload_metadata]),
    	skip_upload_changelogs: !to_b(options[:upload_metadata]),
    	skip_upload_images: !to_b(options[:upload_metadata]),
    	skip_upload_screenshots: !to_b(options[:upload_metadata]),
    	skip_upload_aab: to_b(options[:skip_upload_aab]),
    	skip_upload_apk: to_b(options[:skip_upload_apk]),
    )
  end
  lane :submit do |options|
    supply(
    	root_url: "https://androidpublisher.googleapis.com/",
    	package_name: options[:package_name],
    	version_name: options[:version_name],
    	version_code: options[:version_code].to_i,
        track: "internal",
    	track_promote_to: "production",

    	rollout: "1.0",
    	skip_upload_metadata: !to_b(options[:upload_metadata]),
    	skip_upload_changelogs: !to_b(options[:upload_metadata]),
    	skip_upload_images: !to_b(options[:upload_metadata]),
    	skip_upload_screenshots: !to_b(options[:upload_metadata]),
       	skip_upload_aab: true,
       	skip_upload_apk: true,
    )
  end
end
