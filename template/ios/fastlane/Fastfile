default_platform(:ios)

def to_b(str)
  str == true || str.to_s.downcase == "true"
end

platform :ios do
  lane :common do |options|
    api_key = app_store_connect_api_key(
      key_id: options[:ios_app_store_connect_api_key_id],
      issuer_id: options[:ios_app_store_connect_api_key_issuer_id],
      key_filepath: options[:api_key_filepath],
    )
    Actions.lane_context[:API_KEY] = api_key
    setup_ci
    match(
      storage_mode: "git",
      git_url: options[:ios_match_git_url],
      type: "appstore",
      app_identifier: [options[:ios_app_identifier]],
      verbose: false,
      team_id: options[:ios_developer_team_id]
    )

    update_code_signing_settings(
      use_automatic_signing: false,
      path: "#{options[:ios_xcode_project_target]}.xcodeproj",
      team_id: options[:ios_developer_team_id],
      code_sign_identity: "Apple Distribution"
    )

    update_project_provisioning(
      xcodeproj: "#{options[:ios_xcode_project_target]}.xcodeproj",
      profile: ENV["sigh_#{options[:ios_app_identifier]}_appstore_profile-path"],
      target_filter: options[:ios_xcode_project_target],
      build_configuration: "Release",
      code_signing_identity: "Apple Distribution"
    )
  end

  lane :pull do |options|
    common(options)
    deliver(
      api_key: lane_context[:API_KEY],
      download_metadata: true,
      app_version: options[:version_name],
      force: true, # Set to true to skip verification of HTML preview
      skip_binary_upload: true,
      submit_for_review: false,
      skip_screenshots: true,
      skip_metadata: true,
      precheck_include_in_app_purchases: false,
      reject_if_possible: true,
    )
  end

  lane :build do |options|
    common(options)
    build_app(
      scheme: options[:ios_xcode_project_target],
      silent: true,
      output_directory: options[:ipa_dir],
      output_name: options[:ipa_name],
      export_method: "app-store",
      codesigning_identity: "Apple Distribution",
      export_options: {
        provisioningProfiles: {
          options[:ios_app_identifier] => "match AppStore #{options[:ios_app_identifier]}"
        }
      }
    )
  end

  lane :upload do |options|
    common(options)
    upload_to_testflight(
      api_key: lane_context[:API_KEY],
      app_version: options[:version_name],
      app_identifier: options[:ios_app_identifier],
      app_platform: "ios",
      ipa: options[:ipa_path],
      skip_submission: true,
      skip_waiting_for_build_processing: true,
    )
  end

  lane :submit do |options|
    common(options)
    deliver(
      api_key: lane_context[:API_KEY],
      app_version: options[:version_name],
      force: true, # Set to true to skip verification of HTML preview
      skip_binary_upload: true,
      submit_for_review: true,
      skip_screenshots: !to_b(options[:upload_metadata]),
      skip_metadata: !to_b(options[:upload_metadata]),
      precheck_include_in_app_purchases: false,
      reject_if_possible: true,
    )
  end
end
